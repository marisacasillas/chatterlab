print(md_file)
}
}
for (i in 1:2){
md_file <- readLines(paste0("abstracts-md\\", orig.names[i]))
abstract.num[i] <- gsub("[^0-9]+", "", token$orig.name[i])
md_file <- md_file[5:length(md_file)]
md_file[1] <- paste0("#",md_file[1])
for (j in 1:nrow(submissions)){
if (1 == submissions$`Abstract Number`[j]){
md_file <- c(md_file[1],md_file[2], paste0("*",submissions$Full_name[j],"*") ,md_file[2], submissions$`Your email`[j], md_file[2], md_file[3:length(md_file)])
print(md_file)
}
}
#writeLines(md_file, paste0("abstracts-final\\", token$orig.name[which(token$new.name == orig.names[i])]))
}
for (i in 1:2){
md_file <- readLines(paste0("abstracts-md\\", orig.names[i]))
abstract.num[i] <- gsub("[^0-9]+", "", token$orig.name[i])
md_file <- md_file[5:length(md_file)]
md_file[1] <- paste0("#",md_file[1])
for (j in 1:nrow(submissions)){
if (abstract.num[i] == submissions$`Abstract Number`[j]){
md_file <- c(md_file[1],md_file[2], paste0("*",submissions$Full_name[j],"*") ,md_file[2], submissions$`Your email`[j], md_file[2], md_file[3:length(md_file)])
print(md_file)
}
}
#writeLines(md_file, paste0("abstracts-final\\", token$orig.name[which(token$new.name == orig.names[i])]))
}
for (i in 1:length(orig.names)){
md_file <- readLines(paste0("abstracts-md\\", orig.names[i]))
abstract.num[i] <- gsub("[^0-9]+", "", token$orig.name[i])
md_file <- md_file[5:length(md_file)]
md_file[1] <- paste0("#",md_file[1])
for (j in 1:nrow(submissions)){
if (abstract.num[i] == submissions$`Abstract Number`[j]){
md_file <- c(md_file[1],md_file[2], paste0("*",submissions$Full_name[j],"*") ,md_file[2], submissions$`Your email`[j], md_file[2], md_file[3:length(md_file)])
}
}
writeLines(md_file, paste0("abstracts-final\\", token$orig.name[which(token$new.name == orig.names[i])]))
}
# give abstracts original number and add authors and email address
for (i in 1:length(orig.names)){
md_file <- readLines(paste0("abstracts-md\\", orig.names[i]))
abstract.num[i] <- gsub("[^0-9]+", "", token$orig.name[i])
md_file <- md_file[5:length(md_file)]
md_file[1] <- paste0("#",md_file[1])
for (j in 1:nrow(submissions)){
if (abstract.num[i] == submissions$`Abstract Number`[j]){
md_file <- c(md_file[1],md_file[2], paste0("[*",submissions$Full_name[j],"*](./authors)") ,md_file[2], submissions$`Your email`[j], md_file[2], md_file[3:length(md_file)])
}
}
writeLines(md_file, paste0("abstracts-final\\", token$orig.name[which(token$new.name == orig.names[i])]))
}
# loop through posters to bind the abstracts
poster <- character(0)
md <- character(0)
for (i in 1:nrow(submissions)) {
if (submissions$Decisions[i] == "poster"){
abstract.num <- submissions$`Abstract Number`[i]
md <- paste0(md.poster.2, paste0("abstracts-final\\Abstract-", abstract.num[i], ".md"), # "abstracts-final\\Abstract-[abstract.num].md"
md.poster.3,)
poster <- c(poster, md)
}
}
md.poster.1 <- "# Many Paths to Language
Go to [Main page](../MPaL_handbook)
---
## Poster Overview
### 22 October
"
md.poster.2 <- "" # abstract
md.poster.3 <- "
---
"
md.poster.4 <- "
### 23 October
"
md.poster.5 <- "### Flash posters
"
md.poster.6 <- "### Posters
"
md.poster.7 <-"
---
Go to [Main page](../MPaL_handbook)"
for (i in 1:nrow(submissions)) {
if (submissions$Decisions[i] == "poster"){
abstract.num <- submissions$`Abstract Number`[i]
md <- paste0(md.poster.2, paste0("abstracts-final\\Abstract-", abstract.num[i], ".md"), # "abstracts-final\\Abstract-[abstract.num].md"
md.poster.3,)
poster <- c(poster, md)
}
}
paste0("abstracts-final\\Abstract-", abstract.num[1], ".md")
readLines(paste0("abstracts-final\\Abstract-", abstract.num[1], ".md"))
# loop through posters to bind the abstracts
poster <- character(0)
md <- character(0)
for (i in 1:nrow(submissions)) {
if (submissions$Decisions[i] == "poster"){
abstract <- readLines(paste0("abstracts-final\\Abstract-", submissions$`Abstract Number`[i], ".md"))
md <- paste0(md.poster.2, abstract, # "abstracts-final\\Abstract-[abstract.num].md"
md.poster.3,)
poster <- c(poster, md)
}
}
md
abstract
paste0(md.poster.2, abstract, # "abstracts-final\\Abstract-[abstract.num].md"
md.poster.3,)
# loop through posters to bind the abstracts
poster <- character(0)
md <- character(0)
for (i in 1:nrow(submissions)) {
if (submissions$Decisions[i] == "poster"){
abstract <- readLines(paste0("abstracts-final\\Abstract-", submissions$`Abstract Number`[i], ".md"))
md <- paste0(md.poster.2, abstract, # "abstracts-final\\Abstract-[abstract.num].md"
md.poster.3)
poster <- c(poster, md)
}
}
md
length(poster)
paste0(md.poster.2, abstract, # "abstracts-final\\Abstract-[abstract.num].md"
md.poster.3)
c(md.poster.2, abstract, # "abstracts-final\\Abstract-[abstract.num].md"
md.poster.3)
# loop through posters to bind the abstracts
poster <- character(0)
md <- character(0)
for (i in 1:nrow(submissions)) {
if (submissions$Decisions[i] == "poster"){
abstract <- readLines(paste0("abstracts-final\\Abstract-", submissions$`Abstract Number`[i], ".md"))
md <- c(md.poster.2, abstract, # "abstracts-final\\Abstract-[abstract.num].md"
md.poster.3)
poster <- c(poster, md)
}
}
md
length(poster)
# give abstracts original number and add authors and email address
for (i in 1:length(orig.names)){
md_file <- readLines(paste0("abstracts-md\\", orig.names[i]))
abstract.num[i] <- gsub("[^0-9]+", "", token$orig.name[i])
md_file <- md_file[5:length(md_file)]
md_file[1] <- paste0("#",md_file[1])
for (j in 1:nrow(submissions)){
if (abstract.num[i] == submissions$`Abstract Number`[j]){
md_file <- c(md_file[1],md_file[2], paste0("[*",submissions$Full_name[j],"*](./authors)") ,"", submissions$`Your email`[j], "", md_file[3:length(md_file), "", "---", ""])
}
}
writeLines(md_file, paste0("abstracts-final\\", token$orig.name[which(token$new.name == orig.names[i])]))
}
# give abstracts original number and add authors and email address
for (i in 1:length(orig.names)){
md_file <- readLines(paste0("abstracts-md\\", orig.names[i]))
abstract.num[i] <- gsub("[^0-9]+", "", token$orig.name[i])
md_file <- md_file[5:length(md_file)]
md_file[1] <- paste0("#",md_file[1])
for (j in 1:nrow(submissions)){
if (abstract.num[i] == submissions$`Abstract Number`[j]){
md_file <- c(md_file[1],md_file[2], paste0("[*",submissions$Full_name[j],"*](./authors)"), md_file[2], submissions$`Your email`[j], md_file[2], md_file[3:length(md_file), md_file[2], "---", md_file[2]])
}
}
writeLines(md_file, paste0("abstracts-final\\", token$orig.name[which(token$new.name == orig.names[i])]))
}
# give abstracts original number and add authors and email address
for (i in 1:length(orig.names)){
md_file <- readLines(paste0("abstracts-md\\", orig.names[i]))
abstract.num[i] <- gsub("[^0-9]+", "", token$orig.name[i])
md_file <- md_file[5:length(md_file)]
md_file[1] <- paste0("#",md_file[1])
for (j in 1:nrow(submissions)){
if (abstract.num[i] == submissions$`Abstract Number`[j]){
md_file <- c(md_file[1],md_file[2], paste0("[*",submissions$Full_name[j],"*](./authors)"), md_file[2], submissions$`Your email`[j], md_file[2], md_file[3:length(md_file)], md_file[2], "---", md_file[2]])
}
}
writeLines(md_file, paste0("abstracts-final\\", token$orig.name[which(token$new.name == orig.names[i])]))
}
# give abstracts original number and add authors and email address
for (i in 1:length(orig.names)){
md_file <- readLines(paste0("abstracts-md\\", orig.names[i]))
abstract.num[i] <- gsub("[^0-9]+", "", token$orig.name[i])
md_file <- md_file[5:length(md_file)]
md_file[1] <- paste0("#",md_file[1])
for (j in 1:nrow(submissions)){
if (abstract.num[i] == submissions$`Abstract Number`[j]){
md_file <- c(md_file[1],md_file[2], paste0("[*",submissions$Full_name[j],"*](./authors)"), md_file[2], submissions$`Your email`[j], md_file[2], md_file[3:length(md_file)], md_file[2], "---", md_file[2])
}
}
writeLines(md_file, paste0("abstracts-final\\", token$orig.name[which(token$new.name == orig.names[i])]))
}
# give abstracts original number and add authors and email address
for (i in 1:length(orig.names)){
md_file <- readLines(paste0("abstracts-md\\", orig.names[i]))
abstract.num[i] <- gsub("[^0-9]+", "", token$orig.name[i])
md_file <- md_file[5:length(md_file)]
md_file[1] <- paste0("#",md_file[1])
for (j in 1:nrow(submissions)){
if (abstract.num[i] == submissions$`Abstract Number`[j]){
md_file <- c(md_file[1],md_file[2], paste0("[*",submissions$Full_name[j],"*](./authors)"), "", submissions$`Your email`[j], "", md_file[3:length(md_file)], "", "---", "")
}
}
writeLines(md_file, paste0("abstracts-final\\", token$orig.name[which(token$new.name == orig.names[i])]))
}
# loop through posters to bind the abstracts
poster <- character(0)
md <- character(0)
for (i in 1:nrow(submissions)) {
if (submissions$Decisions[i] == "poster"){
md <- readLines(paste0("abstracts-final\\Abstract-", submissions$`Abstract Number`[i], ".md"))
poster <- c(poster, md)
}
}
length(poster)
md
# loop through posters to bind the abstracts
poster <- character(0)
md <- character(0)
for (i in 1:nrow(submissions)) {
if (submissions$Decisions[i] == "poster"){
md <- paste0(readLines(paste0("abstracts-final\\Abstract-", submissions$`Abstract Number`[i], ".md")))
poster <- c(poster, md)
}
}
md
paste0("abstracts-final\\Abstract-", submissions$`Abstract Number`[i], ".md")
readLines(paste0("abstracts-final\\Abstract-", submissions$`Abstract Number`[1], ".md"))
c(readLines(paste0("abstracts-final\\Abstract-", submissions$`Abstract Number`[1], ".md")))
c(readLines(paste0("abstracts-final\\Abstract-", submissions$`Abstract Number`[1], ".md")))
read_lines_chunked(paste0("abstracts-final\\Abstract-", submissions$`Abstract Number`[1], ".md")))
read_lines_chunked(paste0("abstracts-final\\Abstract-", submissions$`Abstract Number`[1], ".md"))
a <- readLines(paste0("abstracts-final\\Abstract-", submissions$`Abstract Number`[1], ".md")))
a <- readLines(paste0("abstracts-final\\Abstract-", submissions$`Abstract Number`[1], ".md"))
a
paste(sdata, a = '')
paste(a, collapse = '')
paste(a, collapse = ' ')
# loop through posters to bind the abstracts
poster <- character(0)
md <- character(0)
for (i in 1:nrow(submissions)) {
if (submissions$Decisions[i] == "poster"){
md <- paste(readLines(paste0("abstracts-final\\Abstract-", submissions$`Abstract Number`[i], ".md")),collapse = ' ')
poster <- c(poster, md)
}
}
length(poster)
poster
# loop through posters to bind the abstracts
poster <- character(0)
md <- character(0)
for (i in 1:nrow(submissions)) {
if (submissions$Decisions[i] == "poster"){
md <- paste(readLines(paste0("abstracts-final\\Abstract-", submissions$`Abstract Number`[i], ".md")),collapse = '\n')
poster <- c(poster, md)
}
}
poster
poster_abstract_22 <- NA
for (i in 1:(length(poster)/2)){
poster_22[i] <- poster[i]
}
poster_abstract_23 <- character()
for (i in ceiling(length(poster)/2):length(poster)){
poster_23 <- c(poster_23, poster[i])
}
# loop through flash posters to bind the abstracts
flash <- character(0)
md_flash <- character(0)
for (i in 1:nrow(submissions)) {
if (submissions$Decisions[i] == "flash poster"){
md_flash <- paste(readLines(paste0("abstracts-final\\Abstract-", submissions$`Abstract Number`[i], ".md")),collapse = '\n')
flash <- c(flash, md_flash)
}
}
flash_abstract_22 <- NA
for (i in 1:(length(flash)/2)){
flash_22[i] <- flash[i]
}
flash_abstract_23 <- character()
for (i in ((length(flash)/2)+1):length(flash)){
flash_23 <- c(flash_23, flash[i])
}
length(flash)
# bind all formats together to create full overview markdown
poster_abstract_md <- c(md.poster.1, md.poster.5, flash_abstract_22, md.poster.3, md.poster.6, poster_abstract_22, md.poster.3,
md.poster.4, md.poster.5, flash_abstract_23, md.poster.3, md.poster.6, poster_abstract_23,md.poster.3)
write_lines(poster_abstract_md, "Posterabstracts.md")
flash_23
poster_abstract_22 <- NA
for (i in 1:(length(poster)/2)){
poster_abstract_22[i] <- poster[i]
}
poster_abstract_23 <- character(0)
for (i in ceiling(length(poster)/2):length(poster)){
poster_abstract_23 <- c(poster_abstract_23, poster[i])
}
flash_abstract_22 <- NA
for (i in 1:(length(flash)/2)){
flash_abstract_22[i] <- flash[i]
}
flash_abstract_23 <- character(0)
for (i in ((length(flash)/2)+1):length(flash)){
flash_abstract_23 <- c(flash_abstract_23, flash[i])
}
# bind all formats together to create full overview markdown
poster_abstract_md <- c(md.poster.1, md.poster.5, flash_abstract_22, md.poster.3, md.poster.6, poster_abstract_22, md.poster.3,
md.poster.4, md.poster.5, flash_abstract_23, md.poster.3, md.poster.6, poster_abstract_23,md.poster.3)
write_lines(poster_abstract_md, "Posterabstracts.md")
submissions$Decisions == "poster"
which(submissions$Decisions == "poster")
length(which(submissions$Decisions == "poster"))
length(which(submissions$Decisions == "flash poster"))
install.packages("googlesheets4")
library(googlesheets4)
gs4_deauth()
sheet_url <- "https://docs.google.com/document/d/1QBCvSvjRuwj5fDf-52d9ZVgsgPBTPfzGpiH8irBIdOE/edit#"
submissions <- read_sheet(sheet_url)
submissions <- read_sheet(sheet_url)
sheet_url <- "https://docs.google.com/spreadsheets/d/12NDKh1n0GShSUFcciyXgzExlAt4O9OVpxEDqOBDP_es/edit#gid=897788215"
submissions <- read_sheet(sheet_url)
authorList <- strsplit(submissions$`Author names`, split = "[2-9]\\. ")
authorList <- data.frame(`Abstract Number` = rep(submissions$`Abstract Number`, sapply(authorList, length)), `Author names` = unlist(authorList))
# remove the last comma and first number in the string
authorList[,2] <- gsub(", $", "", authorList[,2])
authorList[,2] <- gsub("1\\. ", "", authorList[,2])
# remove rejected abstracts (numbers: 69,81,83,84,93)
reject <- c(69,81,83,84,93)
authorList <- authorList[-c(which(authorList$Abstract.Number %in% reject)),]
# create empty data set for all authors
authors <- setNames(data.frame(matrix(ncol = 7, nrow = 335)), c("Abstract","Full_name","First", "Letters", "Last", "Affiliation", "Email")) # TODO adjust nrow based on final dataset
# write the appropriate parts of the authorList to the columns of author
name <- character(0)
letter <- character(0)
for (j in 1:nrow(authorList)) {
authors$Abstract[j] <- authorList$Abstract.Number[j]
a <- unlist(strsplit(as.character(authorList[j,2]), "^[^,]+\\K|,(?=[^,]+$)" , perl = TRUE))
authors$Email[j] <- a[3]
authors$Affiliation[j] <- a[2]
# find and write uppercase last name to authors data set
authors$Last[j] <- str_extract_all(as.character(a[1]), "\\b[A-Z-'\u00C0-\u00DD][A-Z-' \u00C0-\u00DD]+\\b")
# find and write uppercase letters to authors data set
authors$Letters[j] <- str_extract_all(as.character(a[1]), "[A-Z]\\.")
# find and write rest to first name
authors$First[j] <- str_extract_all(as.character(a[1]), "\\b[A-Z][a-z\u00E0-\u00FF]+\\b")
# combine multiple first names
for (i in 1:length(unlist(authors$First[j]))){
name <- paste(name, authors$First[[j]][i])
}
authors$First[j] <- name
name <- character(0)
# combine multiple letters
for (i in 1:length(unlist(authors$Letters[j]))){
letter <- paste(letter, authors$Letters[[j]][i])
}
authors$Letters[j] <- letter
letter <- character(0)
}
# TODO see if I can create regex that will take the appropriate part all at once so I don't have to merge
# a <- unlist(strsplit(as.character(authorList[237,2]), "^[^,]+\\K|,(?=[^,]+$)" , perl = TRUE))
# str_extract_all(as.character(a[1]), "[[A-Z]\\. ]+")
#
# b <- unlist(strsplit(as.character(authorList[247,2]), "^[^,]+\\K|,(?=[^,]+$)" , perl = TRUE))
# str_extract_all(as.character(b[1]), "[A-Z]\\.")
#
#
# c <- unlist(strsplit(as.character(authorList[1,2]), "^[^,]+\\K|,(?=[^,]+$)" , perl = TRUE))
# str_extract_all(as.character(c[1]), "\\b[[A-Z][a-z]+ ]+\\b")
# remove first comma from affiliation and last name
authors$Affiliation <- sub(", ", "", authors$Affiliation)
# remove first space from first name, last name, letters, and email
authors$First <- sub(" ", "", authors$First)
authors$Letters <- sub(" ", "", authors$Letters)
authors$Email <- sub(" ", "", authors$Email)
# set "NA" values to real NA
authors$Letters[authors$Letters == "NA "] <- NA
authors$First[authors$First == "NA "] <- NA
authors$Last[authors$Last == "NA "] <- NA
authors$Affiliation[authors$Affiliation == "NA"] <- NA
authors$Email[authors$Email == "NA"] <- NA
# capitalize last name
authors$Last <- str_to_title(authors$Last)
# rename dutch names to lower case
authors$Last <- gsub("Van", "van", authors$Last)
authors$Last <- gsub("De", "de", authors$Last)
authors$Last <- gsub("Der", "der", authors$Last)
authors$Last <- gsub("Uit", "uit", authors$Last)
# manually adjust some names
# row 240, 256, 334 the O' cases should have two times uppercase, one for the O and one for the following letter
authors$Last[which(authors$Last == "O'neill")] <- "O'Neill"
authors$Last[which(authors$Last == "D'souza")] <- "D'Souza"
authors$Last[which(authors$Last == "O'brien")] <- "O'Brien"
# row 268, should also be III instead of Iii
authors$Last[which(authors$Last == "Nelson Iii")] <- "Nelson III"
# row 284, should be "De" instead of the Dutch "de"
authors$Last[which(authors$Last == "de Leon")] <- "De Leon"
# row 312, 320 something went wrong with the hyphen and the to title thing
authors$Last[which(authors$Last == "demir-Lira")] <- "Demir-Lira"
# row 66, probably want AtHome instead of Athome
authors$Last[which(authors$Last == "The Manybabies-Athome Consortium")] <- "The Manybabies-AtHome Consortium"
authors$Last[which(authors$Last == "demuth")] <- "Demuth"
authors$Last[which(authors$Last == "dean")] <- "Dean"
# merge names
for (i in 1:nrow(authors)){
if (is.na(authors$First[i]) & is.na(authors$Letters[i])) {
authors$Full_name[i] <- authors$Last[i]
} else if (is.na(authors$First[i])) {
authors$Full_name[i] <- paste(authors$Last[i],authors$Letters[i])
} else if (is.na(authors$Letters[i])){
authors$Full_name[i] <- paste(authors$First[i],authors$Last[i])
} else {
authors$Full_name[i] <- paste(authors$First[i],authors$Letters[i],authors$Last[i])
}
}
## create author index
authorIndex  <- setNames(data.frame(matrix(ncol = 3, nrow = 335)), c("Name","Affiliation","Email"))
duplicate <- which(duplicated(authors$Full_name)==T)
for (i in 1:nrow(authors)){
if (!(i %in% duplicate)){
authorIndex$Affiliation[i] <- authors$Affiliation[i]
authorIndex$Email[i] <- authors$Email[i]
if (is.na(authors$First[i]) & is.na(authors$Letters[i])) {
authorIndex$Name[i] <- authors$Last[i]
} else if (is.na(authors$First[i])) {
authorIndex$Name[i] <- paste0(authors$Last[i], ", " ,authors$Letters[i])
} else if (is.na(authors$Letters[i])){
authorIndex$Name[i] <- paste0(authors$Last[i], ", ",authors$First[i])
} else {
authorIndex$Name[i] <- paste0(authors$Last[i], ", ", authors$First[i], " ", authors$Letters[i])
}
}
}
# remove empty rows
authorIndex <- authorIndex[rowSums(is.na(authorIndex)) != ncol(authorIndex), ]
# remove MB authors
authorIndex <- authorIndex[-c(which(authorIndex$Name == "The Manybabies-AtHome Consortium")),]
authorIndex <- authorIndex[-c(which(authorIndex$Name == "The Manybabies Africa Team")),]
# rename Dutch names
authorIndex$Name[which(authorIndex$Name == "van der Ven, Jeffrey")] <- "Ven, Jeffrey van der"
authorIndex$Name[which(authorIndex$Name == "van Stiphout, Mees")] <- "Stiphout, Mees van"
authorIndex$Name[which(authorIndex$Name == "van Gils, Teun")] <- "Gils, Teun van"
authorIndex$Name[which(authorIndex$Name == "van Paridon, Jeroen")] <- "Paridon, Jeroen van"
authorIndex$Name[which(authorIndex$Name == "de Jonge-Hoekstra, Lisette")] <- "Jonge-Hoekstra, Lisette de"
authorIndex$Name[which(authorIndex$Name == "van Nunen, Trees")] <- "Nunen, Trees van"
authorIndex$Name[which(authorIndex$Name == "de Vries, Maartje")] <- "Vries, Maartje de"
authorIndex$Name[which(authorIndex$Name == "de Vos, Connie")] <- "Vos, Connie de"
# order name column alphabetically
authorIndex <- authorIndex[order(authorIndex$Name),c(1:3)]
## create right layout for md file
index.template.1 <- "# Many Paths to Language
Go to [Main page](../MPaL_handbook)
---
## Author Index
|Name|Affiliation|Contact|
|---|---|---|"
index.template.2 <- "|"
index.template.3 <- "" # author name
index.template.4 <- "" # affiliation
index.template.5 <- "" # email
index.template.6 <- "
---
Go to [Main page](../MPaL_handbook)"
# |Author A|Affiliation A|email|
# |Author B|Affiliation B|email|
# |Author C|Affiliation C|email|
# |Author D|Affiliation D|email|
md_index <- character(0)
index <- character(0)
for (i in 1:nrow(authorIndex)) {
md_index <- paste0(index.template.2,
index.template.3, authorIndex$Name[i],
index.template.2,
index.template.4, authorIndex$Affiliation[i],
index.template.2,
index.template.5, authorIndex$Email[i],
index.template.2)
index <- c(index, md_index)
}
indexAuthors <- c(index.template.1,index,index.template.6)
# write as md file
write_lines(indexAuthors, "authorIndex.md")
unique(submissions$`detailed-clusters`)
warnings()
submissions$`day-clusters`[1] == 1
warnings()
submissions$`day-clusters`[1] == 1
# Loop through posters
poster_22 <- character(0)
poster_23 <- character(0)
md <- character(0)
for (i in 1:nrow(submissions)) {
if (submissions$Decisions[i] == "poster"){
abstract.num <- submissions$`Abstract Number`[i]
md <- paste0(md.template.p2, submissions$`Abstract title`[i],
md.template.p3, submissions$Full_name[i],
md.template.p4,
md.template.p5,
md.template.p6, submissions$`Abstract-title`[i],
md.template.p7,
md.template.p8)
if (submissions$`day-clusters`[i] == 1){
poster_22 <- c(poster, md)
} else {
poster_23 <- c(poster, md)
}
}
}
unique(submissions$`detailed-clusters`)
if (submissions$Decisions == "poster"){
unique(submissions$`detailed-clusters`)
}
