)
trial.lengths.overall <- trial.lengths.bystudent %>%
group_by(trial_number) %>%
summarize(
mean.len = mean(total.words),
median.len = median(total.words),
sd.len = sd(total.words),
min.len = min(total.words),
max.len = max(total.words)
) %>%
mutate(
upper = mean.len + sd.len,
lower = mean.len - sd.len
)
ggplot(trial.lengths.overall, aes(x = trial_number, y = mean.len, group = 1)) +
geom_text(data = trial.lengths.bystudent, aes(x = trial_number,
y = total.words,
group =student_name,
color = student_name,
label = student_name),
alpha = 0.5) +
geom_line(data = trial.lengths.bystudent, aes(x = trial_number,
y = total.words,
group =student_name,
color = student_name),
alpha = 0.5) +
geom_pointrange(aes(ymin = lower, ymax = upper)) +
geom_line(lwd = 1) +
theme_minimal() +
labs(x = "Trial number", y = "Director speech length (words)") +
guides(color = "none")
# duration of director speech trials 1, 3, and 6 in seconds
trial.durations.bystudent <- interaction.data %>%
mutate(duration = time_end - time_start) %>%
filter(tier_name == "director_speech") %>%
group_by(student_name, trial_number) %>%
summarize(
total.dur = sum(duration)
)
trial.durations.overall <- trial.durations.bystudent %>%
group_by(trial_number) %>%
summarize(
mean.dur = mean(total.dur),
median.dur = median(total.dur),
sd.dur = sd(total.dur),
min.dur = min(total.dur),
max.dur = max(total.dur)
) %>%
mutate(
upper = mean.dur + sd.dur,
lower = mean.dur - sd.dur
)
ggplot(trial.durations.overall, aes(x = trial_number, y = mean.dur, group = 1)) +
geom_text(data = trial.durations.bystudent, aes(x = trial_number,
y = total.dur,
group =student_name,
color = student_name,
label = student_name),
alpha = 0.5) +
geom_line(data = trial.durations.bystudent, aes(x = trial_number,
y = total.dur,
group =student_name,
color = student_name),
alpha = 0.5) +
geom_pointrange(aes(ymin = lower, ymax = upper)) +
geom_line(lwd = 1) +
theme_minimal() +
labs(x = "Trial number", y = "Director speech duration (sec)") +
guides(color = "none")
# accuracy
interaction.data.accuracy <- tibble()
for (student in unique(interaction.data$student_name)) {
st.data <- interaction.data %>%
filter(student_name == student & grepl("placement", tier_name))
for (ptcp in unique(st.data$tier_name)) {
ptcp.data <- st.data %>%
filter(tier_name == ptcp)
for (trial in unique(ptcp.data$trial_number)) {
placements <- ptcp.data %>%
filter(trial_number == trial) %>%
pull(content)
trial.answer.placements <- answer.placements %>%
filter(trial_number == trial) %>%
pull(placement_keys)
correct.placements <- length(which(
placements %in% trial.answer.placements))
interaction.data.accuracy <- bind_rows(
interaction.data.accuracy,
tibble(
student_name = student,
tier_name = ptcp,
trial_number = trial,
n_correct = correct.placements
)
)
}
}
}
# super specific to this course -- not generalizable,
# but bc suspicious data quality
interaction.data.accuracy <- interaction.data.accuracy %>%
filter(!(student_name %in% c("MatthewJPark", "DamonHuff", "JonathanXu")))
accuracy.bystudent <- interaction.data.accuracy %>%
mutate(
accuracy.prop = n_correct/12,
placer = ifelse(tier_name == "matcher_placement_id", "Matcher", "Overhearer")
)
View(accuracy.bystudent)
subset(interaction.data.accuracy, student_name == "JessicaDavalos")
# accuracy
interaction.data.accuracy <- tibble()
for (student in unique(interaction.data$student_name)) {
st.data <- interaction.data %>%
filter(student_name == student & grepl("placement", tier_name))
for (ptcp in unique(st.data$tier_name)) {
ptcp.data <- st.data %>%
filter(tier_name == ptcp)
for (trial in unique(ptcp.data$trial_number)) {
placements <- ptcp.data %>%
filter(trial_number == trial) %>%
pull(content)
trial.answer.placements <- answer.placements %>%
filter(trial_number == trial) %>%
pull(placement_keys)
correct.placements <- length(which(unique(
placements) %in% trial.answer.placements))
interaction.data.accuracy <- bind_rows(
interaction.data.accuracy,
tibble(
student_name = student,
tier_name = ptcp,
trial_number = trial,
n_correct = correct.placements
)
)
}
}
}
subset(interaction.data.accuracy, student_name == "JessicaDavalos")
subset(interaction.data.accuracy, student_name == "AvaSinai")
subset(interaction.data.accuracy, student_name == "CatherineAcosta")
# super specific to this course -- not generalizable,
# but bc suspicious data quality
interaction.data.accuracy <- interaction.data.accuracy %>%
filter(!(student_name %in% c("MatthewJPark", "DamonHuff", "JonathanXu")))
accuracy.bystudent <- interaction.data.accuracy %>%
mutate(
accuracy.prop = n_correct/12,
placer = ifelse(tier_name == "matcher_placement_id", "Matcher", "Overhearer")
)
accuracy.overall <- accuracy.bystudent %>%
group_by(trial_number, placer) %>%
summarize(
mean.acc = mean(accuracy.prop),
median.acc = median(accuracy.prop),
sd.acc = sd(accuracy.prop),
min.acc = min(accuracy.prop),
max.acc = max(accuracy.prop)
) %>%
mutate(
upper = mean.acc + sd.acc,
lower =  mean.acc - sd.acc
)
ggplot(accuracy.overall, aes(x = trial_number, y = mean.acc,
group = placer, linetype = placer, color = placer)) +
coord_cartesian(ylim = c(0, 1)) +
# ylim(0,1) +
geom_jitter(data = accuracy.bystudent, aes(
x = trial_number, y = accuracy.prop, color = placer), alpha = 0.3) +
geom_pointrange(aes(ymin = lower, ymax = upper)) +
scale_color_manual(values = c("springgreen4", "chocolate2")) +
geom_line() +
theme_minimal() +
labs(x = "Trial number", y = "Accuracy",
linetype = "Participant", color = "Participant")
subset(interaction.data.accuracy, student_name == "JoSienche")
subset(interaction.data.accuracy, student_name == "JoSiench√©")
subset(interaction.data.accuracy, grepl("Jo", student_name))
# placement timing
timing.data <-timing.data %>%
mutate(
placer = ifelse(tier_name == "matcher_placement_id", "Matcher", "Overhearer")
)
timing.data.bystudent <- timing.data %>%
group_by(student_name, trial_number, placer) %>%
summarize(
mean.time_diff = mean(time_diff_sec)
)
timing.data.overall <- timing.data.bystudent %>%
group_by(trial_number, placer) %>%
summarize(
mean.td = mean(mean.time_diff),
median.td = median(mean.time_diff),
sd.td = sd(mean.time_diff),
min.td = min(mean.time_diff),
max.td = max(mean.time_diff)
)
ggplot(timing.data, aes(x = time_diff_sec, linetype = placer)) +
geom_density() +
theme_minimal() +
labs(x = "Placement timing (sec)", y = "Density",
linetype = "Participant") +
xlim(-30, 30)
ggplot(timing.data,
aes(x = time_diff_sec, linetype = placer, color = trial_number)) +
geom_density() +
theme_minimal() +
facet_grid(~ placer) +
scale_color_manual(values = c("gray70", "gray50", "black")) +
labs(x = "Placement timing (sec)", y = "Density",
color = "Trial", linetype = "Participant") +
guides(color = "none", linetype = "none") +
xlim(-30, 30)
write_csv(trial.lengths.overall, "trial.lengths.overall.csv")
trial.durations.overall <- trial.durations.bystudent %>%
group_by(trial_number) %>%
summarize(
mean.dur = mean(total.dur),
median.dur = median(total.dur),
sd.dur = sd(total.dur),
min.dur = min(total.dur),
max.dur = max(total.dur)
) %>%
mutate(
upper = mean.dur + sd.dur,
lower = mean.dur - sd.dur
)
trial.durations.overall
accuracy.overall
write_csv(accuracy.overall, "accuracy.overall-new.csv"
)
timing.data.overall
write_csv(timing.data.overall, "timing.data.overall-new.csv")
View(interaction.data)
## Other stuff
# - time from start of 1 to end of 6 (range; averages)
# x common/funny pacts for one figure
# x completion language
completion.phrases <- interaction.data %>%
filter(tier_name == "completion_point") %>%
group_by(content) %>%
summarize(n = n())
completion.phrases
## Other stuff
# - time from start of 1 to end of 6 (range; averages)
# x common/funny pacts for one figure
# x completion language
completion.phrases <- interaction.data %>%
filter(tier_name == "completion_point") %>%
group_by(content) %>%
summarize(n = n()) %>%
arrange(-n)
completion.phrases
## Other stuff
# - time from start of 1 to end of 6 (range; averages)
# x common/funny pacts for one figure
# x completion language (to be manually edited for to 10)
completion.phrases <- interaction.data %>%
filter(tier_name == "completion_point") %>%
group_by(content) %>%
summarize(n = n()) %>%
arrange(-n)
write_csv(completion.phrases, "completion.phrases.csv")
interaction.data %>% select(tier_name, student_name) %>% filter(grepl("placement_id", tier_name)) %>% group_by(student_name) %>% distinct()
interaction.data %>% select(tier_name, student_name) %>% filter(grepl("placement_id", tier_name)) %>% group_by(student_name) %>% summarize(n = n())
interaction.data %>% select(tier_name, student_name) %>% filter(grepl("placement_id", tier_name)) %>% group_by(student_name) %>% distinct() %>% summarize(n = n())
# x MD & OH or just MD?
n.ptcps <- interaction.data %>%
select(tier_name, student_name) %>%
filter(grepl("placement_id", tier_name)) %>%
group_by(student_name) %>%
distinct() %>%
summarize(n = n())
View(n.ptcps)
unique(interaction.data$tier_name)
## Other stuff
# - time from start of 1 to end of 6 (range; averages)
# x pacts for figures by trial 6
pacts.to.manually.sort <- interaction.data %>%
filter(tier_name == "director_speech" & trial_number == "6") %>%
select(tier_name, student_name)
View(pacts.to.manually.sort)
## Other stuff
# - time from start of 1 to end of 6 (range; averages)
# x pacts for figures by trial 6
pacts.to.manually.sort <- interaction.data %>%
filter(tier_name == "director_speech" & trial_number == "6") %>%
select(student_name, content, time_start)
## Other stuff
# - time from start of 1 to end of 6 (range; averages)
# x pacts for figures by trial 6
pacts.to.manually.sort <- interaction.data %>%
filter(tier_name == "director_speech" & trial_number == "6") %>%
select(student_name, content, card_id, time_start)
## Other stuff
# - time from start of 1 to end of 6 (range; averages)
# x pacts for figures by trial 6
pacts.to.manually.sort <- interaction.data %>%
filter(tier_name == "director_speech" & trial_number == "6") %>%
select(student_name, card_id, time_start, content)
write_csv(pacts.to.manually.sort, "pacts.to.manually.sort.csv")
interaction.data %>%
select(tier_name, student_name, content) %>%
filter(grepl("placement_id", tier_name))
interaction.data %>%
select(trial_number, tier_name, student_name, content) %>%
filter(grepl("placement_id", tier_name)) %>%
distinct()
interaction.data %>%
select(trial_number, tier_name, student_name, content) %>%
filter(grepl("placement_id", tier_name)) %>%
distinct() %>%
group_by(trial_number, tier_name, student_name) %>%
summarize(n = n())
# x missing placements (ignorant of accuracy; completeness of placement)
missing.placements.bystudent <- interaction.data %>%
select(trial_number, tier_name, student_name, content) %>%
filter(grepl("placement_id", tier_name)) %>%
distinct() %>%
group_by(trial_number, tier_name, student_name) %>%
summarize(n = n())
max(missing.placements.bystudent$n)
View(missing.placements.bystudent)
interaction.data %>%
select(trial_number, tier_name, student_name, content) %>%
filter(grepl("placement_id", tier_name)) %>%
distinct() %>%
filter(student_name == "ClaireWeber", trial_number == "1") %>%
View()
# x missing placements (ignorant of accuracy; completeness of placement)
n.placements.bystudent <- interaction.data %>%
select(trial_number, tier_name, student_name, content) %>%
filter(grepl("placement_id", tier_name)) %>%
distinct() %>%
group_by(trial_number, tier_name, student_name) %>%
summarize(n = n())
n.placements.bystudent
# x missing placements (ignorant of accuracy; completeness of placement)
n.placements.bystudent <- interaction.data %>%
select(trial_number, tier_name, student_name, content) %>%
filter(grepl("placement_id", tier_name)) %>%
distinct() %>%
group_by(trial_number, tier_name, student_name) %>%
summarize(n = n()) %>%
mutate(diff.placements = n - 12)
# x missing placements (ignorant of accuracy; completeness of placement)
n.placements.bystudent <- interaction.data %>%
select(trial_number, tier_name, student_name, content) %>%
filter(grepl("placement_id", tier_name)) %>%
distinct() %>%
group_by(trial_number, tier_name, student_name) %>%
summarize(n = n()) %>%
mutate(diff.placements = n - 12,
extra.placements = ifelse(diff.placements < 0, 1, 0),
incomplete.placements = ifelse(diff.placements > 0, 1, 0))
View(n.placements.bystudent)
n.placements.bystudent %>%
group_by(trial_number, tier_name) %>%
summarize(
mean.n.placements = mean(n),
prop.w.extra = mean(extra.placements),
prop.w.missing = mean(incomplete.placements)
)
n.placements.bystudent %>%
group_by(trial_number, tier_name) %>%
summarize(
mean.n.placements = mean(n),
prop.w.extra = mean(extra.placements),
prop.w.missing = mean(incomplete.placements)
)
n.placements.bystudent %>%
group_by(trial_number, tier_name) %>%
summarize(
mean.n.placements = mean(n),
min.n.placements = min(n),
max.n.placements = max(n),
prop.w.extra = mean(extra.placements),
prop.w.missing = mean(incomplete.placements)
)
n.placements.overall <- n.placements.bystudent %>%
group_by(trial_number, tier_name) %>%
summarize(
mean.n.placements = mean(n),
median.n.placements = median(n),
min.n.placements = min(n),
max.n.placements = max(n),
prop.w.extra = mean(extra.placements),
prop.w.missing = mean(incomplete.placements)
)
n.placements.overall
write_csv(n.placements.overall, "n.placements.overall.csv")
n.placements.overall <- n.placements.bystudent %>%
group_by(trial_number, tier_name) %>%
summarize(
mean.n.placements = mean(n),
median.n.placements = median(n),
min.n.placements = min(n),
max.n.placements = max(n),
prop.w.extra = mean(extra.placements),
prop.w.missing = mean(incomplete.placements)
) %>%
mutate(
placer = ifelse(tier_name == "matcher_placement_id", "Matcher", "Overhearer")
)
write_csv(n.placements.overall, "n.placements.overall.csv")
n.placements.overall
n.placements.overall <- n.placements.bystudent %>%
group_by(trial_number, tier_name) %>%
summarize(
mean.n.placements = mean(n),
median.n.placements = median(n),
min.n.placements = min(n),
max.n.placements = max(n),
prop.w.extra = mean(extra.placements),
prop.w.missing = mean(incomplete.placements)
) %>%
mutate(
participant = ifelse(tier_name == "matcher_placement_id", "Matcher", "Overhearer")
) %>%
select(participant, trial_number, mean.n.placements, median.n.placements,
min.n.placements, max.n.placements, prop.w.extra, prop.w.missing)
write_csv(n.placements.overall, "n.placements.overall.csv")
n.placements.overall
ggplot(n.placements, aes(x = interaction(participant, trial_number),
y = prop.w.extra)) +
geom_bar()
ggplot(n.placements.overall, aes(x = interaction(participant, trial_number),
y = prop.w.extra)) +
geom_bar()
ggplot(n.placements.overall, aes(x = interaction(participant, trial_number),
y = prop.w.extra)) +
geom_bar()
ggplot(n.placements.overall, aes(group = interaction(participant, trial_number),
y = prop.w.extra)) +
geom_bar()
ggplot(n.placements.overall, aes(group = interaction(participant, trial_number),
y = prop.w.extra)) +
geom_bar(stat = "identity")
ggplot(n.placements.overall, aes(x = interaction(participant, trial_number),
y = prop.w.extra)) +
geom_bar(stat = "identity")
ggplot(n.placements.overall, aes(x = participant),
y = prop.w.extra)) +
geom_bar(stat = "identity") +
facet_grid(~trial_number)
ggplot(n.placements.overall, aes(x = trial_number),
y = prop.w.extra, fill = participant)) +
geom_bar(stat = "identity")
ggplot(n.placements.overall, aes(x = trial_number,
y = prop.w.extra, fill = participant)) +
geom_bar(stat = "identity")
ggplot(n.placements.overall, aes(x = trial_number,
y = prop.w.extra, fill = participant)) +
geom_bar(stat = "identity", position = "dodge")
ggplot(n.placements.overall, aes(x = trial_number,
y = prop.w.extra, fill = participant)) +
geom_bar(stat = "identity", position = "dodge") +
theme_apa
ggplot(n.placements.overall, aes(x = trial_number,
y = prop.w.extra, fill = participant)) +
geom_bar(stat = "identity", position = "dodge") +
theme_apa()
ggplot(n.placements.overall, aes(x = trial_number,
y = prop.w.extra, fill = participant)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal()
ggplot(n.placements.overall, aes(x = trial_number,
y = prop.w.extra, fill = participant)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
scale_color_manual(values = c("springgreen4", "chocolate2")) +
labs(x = "Trial number", y = "Proportion w/ >12 placements",
fill = "Participant")
ggplot(n.placements.overall, aes(x = trial_number,
y = prop.w.extra, fill = participant)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
scale_fill_manual(values = c("springgreen4", "chocolate2")) +
labs(x = "Trial number", y = "Proportion w/ >12 placements",
fill = "Participant")
ggplot(n.placements.overall, aes(x = trial_number,
y = prop.w.missing, fill = participant)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
scale_fill_manual(values = c("springgreen4", "chocolate2")) +
labs(x = "Trial number", y = "Proportion w/ <12 placements",
fill = "Participant")
ggplot(n.placements.overall, aes(x = trial_number,
y = prop.w.extra, fill = participant)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
ylim(0, 0.25) +
scale_fill_manual(values = c("springgreen4", "chocolate2")) +
labs(x = "Trial number", y = "Proportion w/ >12 placements",
fill = "Participant")
write_csv(n.placements.overall, "n.placements.overall.csv")
ggplot(n.placements.overall, aes(x = trial_number,
y = prop.w.extra, fill = participant)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
ylim(0, 0.25) +
scale_fill_manual(values = c("springgreen4", "chocolate2")) +
labs(x = "Trial number", y = "Proportion w/ >12 placements",
fill = "Participant")
ggplot(n.placements.overall, aes(x = trial_number,
y = prop.w.missing, fill = participant)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
ylim(0, 0.25) +
scale_fill_manual(values = c("springgreen4", "chocolate2")) +
labs(x = "Trial number", y = "Proportion w/ <12 placements",
fill = "Participant")
